
lab2C:     формат файла elf64-x86-64


Дизассемблирование раздела .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Дизассемблирование раздела .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 4f 90             	add    %cl,-0x70(%rdi)
 36a:	b4 12                	mov    $0x12,%ah
 36c:	36 ce                	ss (bad) 
 36e:	b1 f8                	mov    $0xf8,%cl
 370:	6d                   	insl   (%dx),%es:(%rdi)
 371:	1d 0f 04 7e db       	sbb    $0xdb7e040f,%eax
 376:	8b ae bf 8a ce 1c    	mov    0x1cce8abf(%rsi),%ebp

Дизассемблирование раздела .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	09 00                	or     %eax,(%rax)
 3a6:	00 00                	add    %al,(%rax)
 3a8:	01 00                	add    %eax,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	06                   	(bad)  
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 09                	add    %cl,(%rcx)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 d1                	add    %dl,%cl
 3c1:	65 ce                	gs (bad) 
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Дизассемблирование раздела .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	21 00                	and    %eax,(%rax)
 3e2:	00 00                	add    %al,(%rax)
 3e4:	12 00                	adc    (%rax),%al
	...
 3f6:	00 00                	add    %al,(%rax)
 3f8:	67 00 00             	add    %al,(%eax)
 3fb:	00 20                	add    %ah,(%rax)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 0b                	add    %cl,(%rbx)
 411:	00 00                	add    %al,(%rax)
 413:	00 12                	add    %dl,(%rdx)
	...
 425:	00 00                	add    %al,(%rax)
 427:	00 10                	add    %dl,(%rax)
 429:	00 00                	add    %al,(%rax)
 42b:	00 12                	add    %dl,(%rdx)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 29                	add    %ch,(%rcx)
 441:	00 00                	add    %al,(%rax)
 443:	00 12                	add    %dl,(%rdx)
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 3f                	add    %bh,(%rdi)
 459:	00 00                	add    %al,(%rax)
 45b:	00 12                	add    %dl,(%rdx)
	...
 46d:	00 00                	add    %al,(%rax)
 46f:	00 83 00 00 00 20    	add    %al,0x20000000(%rbx)
	...
 485:	00 00                	add    %al,(%rax)
 487:	00 92 00 00 00 20    	add    %dl,0x20000000(%rdx)
	...
 49d:	00 00                	add    %al,(%rax)
 49f:	00 30                	add    %dh,(%rax)
 4a1:	00 00                	add    %al,(%rax)
 4a3:	00 22                	add    %ah,(%rdx)
	...

Дизассемблирование раздела .dynstr:

00000000000004b8 <.dynstr>:
 4b8:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 4bc:	63 2e                	movslq (%rsi),%ebp
 4be:	73 6f                	jae    52f <_init-0xad1>
 4c0:	2e 36 00 70 75       	cs add %dh,%ss:0x75(%rax)
 4c5:	74 73                	je     53a <_init-0xac6>
 4c7:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4ca:	73 74                	jae    540 <_init-0xac0>
 4cc:	61                   	(bad)  
 4cd:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 4d0:	63 68 6b             	movslq 0x6b(%rax),%ebp
 4d3:	5f                   	pop    %rdi
 4d4:	66 61                	data16 (bad) 
 4d6:	69 6c 00 70 75 74 63 	imul   $0x68637475,0x70(%rax,%rax,1),%ebp
 4dd:	68 
 4de:	61                   	(bad)  
 4df:	72 00                	jb     4e1 <_init-0xb1f>
 4e1:	70 72                	jo     555 <_init-0xaab>
 4e3:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 4ea:	63 78 61             	movslq 0x61(%rax),%edi
 4ed:	5f                   	pop    %rdi
 4ee:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 4f4:	7a 65                	jp     55b <_init-0xaa5>
 4f6:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4f9:	6c                   	insb   (%dx),%es:(%rdi)
 4fa:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 501:	72 74                	jb     577 <_init-0xa89>
 503:	5f                   	pop    %rdi
 504:	6d                   	insl   (%dx),%es:(%rdi)
 505:	61                   	(bad)  
 506:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 50d:	43 5f                	rex.XB pop %r15
 50f:	32 2e                	xor    (%rsi),%ch
 511:	34 00                	xor    $0x0,%al
 513:	47                   	rex.RXB
 514:	4c                   	rex.WR
 515:	49                   	rex.WB
 516:	42                   	rex.X
 517:	43 5f                	rex.XB pop %r15
 519:	32 2e                	xor    (%rsi),%ch
 51b:	32 2e                	xor    (%rsi),%ch
 51d:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 522:	4d 5f                	rex.WRB pop %r15
 524:	64 65 72 65          	fs gs jb 58d <_init-0xa73>
 528:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 52f:	4d 
 530:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 532:	6f                   	outsl  %ds:(%rsi),(%dx)
 533:	6e                   	outsb  %ds:(%rsi),(%dx)
 534:	65 54                	gs push %rsp
 536:	61                   	(bad)  
 537:	62                   	(bad)  
 538:	6c                   	insb   (%dx),%es:(%rdi)
 539:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 53d:	67 6d                	insl   (%dx),%es:(%edi)
 53f:	6f                   	outsl  %ds:(%rsi),(%dx)
 540:	6e                   	outsb  %ds:(%rsi),(%dx)
 541:	5f                   	pop    %rdi
 542:	73 74                	jae    5b8 <_init-0xa48>
 544:	61                   	(bad)  
 545:	72 74                	jb     5bb <_init-0xa45>
 547:	5f                   	pop    %rdi
 548:	5f                   	pop    %rdi
 549:	00 5f 49             	add    %bl,0x49(%rdi)
 54c:	54                   	push   %rsp
 54d:	4d 5f                	rex.WRB pop %r15
 54f:	72 65                	jb     5b6 <_init-0xa4a>
 551:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 558:	4d 
 559:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 55b:	6f                   	outsl  %ds:(%rsi),(%dx)
 55c:	6e                   	outsb  %ds:(%rsi),(%dx)
 55d:	65 54                	gs push %rsp
 55f:	61                   	(bad)  
 560:	62                   	.byte 0x62
 561:	6c                   	insb   (%dx),%es:(%rdi)
 562:	65                   	gs
	...

Дизассемблирование раздела .gnu.version:

0000000000000564 <.gnu.version>:
 564:	00 00                	add    %al,(%rax)
 566:	02 00                	add    (%rax),%al
 568:	00 00                	add    %al,(%rax)
 56a:	02 00                	add    (%rax),%al
 56c:	03 00                	add    (%rax),%eax
 56e:	02 00                	add    (%rax),%al
 570:	02 00                	add    (%rax),%al
 572:	00 00                	add    %al,(%rax)
 574:	00 00                	add    %al,(%rax)
 576:	02 00                	add    (%rax),%al

Дизассемблирование раздела .gnu.version_r:

0000000000000578 <.gnu.version_r>:
 578:	01 00                	add    %eax,(%rax)
 57a:	02 00                	add    (%rax),%al
 57c:	01 00                	add    %eax,(%rax)
 57e:	00 00                	add    %al,(%rax)
 580:	10 00                	adc    %al,(%rax)
 582:	00 00                	add    %al,(%rax)
 584:	00 00                	add    %al,(%rax)
 586:	00 00                	add    %al,(%rax)
 588:	14 69                	adc    $0x69,%al
 58a:	69 0d 00 00 03 00 51 	imul   $0x51,0x30000(%rip),%ecx        # 30594 <_end+0x2c57c>
 591:	00 00 00 
 594:	10 00                	adc    %al,(%rax)
 596:	00 00                	add    %al,(%rax)
 598:	75 1a                	jne    5b4 <_init-0xa4c>
 59a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 5a0:	5b                   	pop    %rbx
 5a1:	00 00                	add    %al,(%rax)
 5a3:	00 00                	add    %al,(%rax)
 5a5:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .rela.dyn:

00000000000005a8 <.rela.dyn>:
 5a8:	a0 3d 00 00 00 00 00 	movabs 0x80000000000003d,%al
 5af:	00 08 
 5b1:	00 00                	add    %al,(%rax)
 5b3:	00 00                	add    %al,(%rax)
 5b5:	00 00                	add    %al,(%rax)
 5b7:	00 a0 11 00 00 00    	add    %ah,0x11(%rax)
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 a8 3d 00 00 00    	add    %ch,0x3d(%rax)
 5c5:	00 00                	add    %al,(%rax)
 5c7:	00 08                	add    %cl,(%rax)
 5c9:	00 00                	add    %al,(%rax)
 5cb:	00 00                	add    %al,(%rax)
 5cd:	00 00                	add    %al,(%rax)
 5cf:	00 60 11             	add    %ah,0x11(%rax)
 5d2:	00 00                	add    %al,(%rax)
 5d4:	00 00                	add    %al,(%rax)
 5d6:	00 00                	add    %al,(%rax)
 5d8:	08 40 00             	or     %al,0x0(%rax)
 5db:	00 00                	add    %al,(%rax)
 5dd:	00 00                	add    %al,(%rax)
 5df:	00 08                	add    %cl,(%rax)
 5e1:	00 00                	add    %al,(%rax)
 5e3:	00 00                	add    %al,(%rax)
 5e5:	00 00                	add    %al,(%rax)
 5e7:	00 08                	add    %cl,(%rax)
 5e9:	40 00 00             	add    %al,(%rax)
 5ec:	00 00                	add    %al,(%rax)
 5ee:	00 00                	add    %al,(%rax)
 5f0:	d8 3f                	fdivrs (%rdi)
 5f2:	00 00                	add    %al,(%rax)
 5f4:	00 00                	add    %al,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	06                   	(bad)  
 5f9:	00 00                	add    %al,(%rax)
 5fb:	00 02                	add    %al,(%rdx)
	...
 605:	00 00                	add    %al,(%rax)
 607:	00 e0                	add    %ah,%al
 609:	3f                   	(bad)  
 60a:	00 00                	add    %al,(%rax)
 60c:	00 00                	add    %al,(%rax)
 60e:	00 00                	add    %al,(%rax)
 610:	06                   	(bad)  
 611:	00 00                	add    %al,(%rax)
 613:	00 06                	add    %al,(%rsi)
	...
 61d:	00 00                	add    %al,(%rax)
 61f:	00 e8                	add    %ch,%al
 621:	3f                   	(bad)  
 622:	00 00                	add    %al,(%rax)
 624:	00 00                	add    %al,(%rax)
 626:	00 00                	add    %al,(%rax)
 628:	06                   	(bad)  
 629:	00 00                	add    %al,(%rax)
 62b:	00 07                	add    %al,(%rdi)
	...
 635:	00 00                	add    %al,(%rax)
 637:	00 f0                	add    %dh,%al
 639:	3f                   	(bad)  
 63a:	00 00                	add    %al,(%rax)
 63c:	00 00                	add    %al,(%rax)
 63e:	00 00                	add    %al,(%rax)
 640:	06                   	(bad)  
 641:	00 00                	add    %al,(%rax)
 643:	00 08                	add    %cl,(%rax)
	...
 64d:	00 00                	add    %al,(%rax)
 64f:	00 f8                	add    %bh,%al
 651:	3f                   	(bad)  
 652:	00 00                	add    %al,(%rax)
 654:	00 00                	add    %al,(%rax)
 656:	00 00                	add    %al,(%rax)
 658:	06                   	(bad)  
 659:	00 00                	add    %al,(%rax)
 65b:	00 09                	add    %cl,(%rcx)
	...

Дизассемблирование раздела .rela.plt:

0000000000000668 <.rela.plt>:
 668:	b8 3f 00 00 00       	mov    $0x3f,%eax
 66d:	00 00                	add    %al,(%rax)
 66f:	00 07                	add    %al,(%rdi)
 671:	00 00                	add    %al,(%rax)
 673:	00 01                	add    %al,(%rcx)
	...
 67d:	00 00                	add    %al,(%rax)
 67f:	00 c0                	add    %al,%al
 681:	3f                   	(bad)  
 682:	00 00                	add    %al,(%rax)
 684:	00 00                	add    %al,(%rax)
 686:	00 00                	add    %al,(%rax)
 688:	07                   	(bad)  
 689:	00 00                	add    %al,(%rax)
 68b:	00 03                	add    %al,(%rbx)
	...
 695:	00 00                	add    %al,(%rax)
 697:	00 c8                	add    %cl,%al
 699:	3f                   	(bad)  
 69a:	00 00                	add    %al,(%rax)
 69c:	00 00                	add    %al,(%rax)
 69e:	00 00                	add    %al,(%rax)
 6a0:	07                   	(bad)  
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 6ae:	00 00                	add    %al,(%rax)
 6b0:	d0 3f                	sarb   (%rdi)
 6b2:	00 00                	add    %al,(%rax)
 6b4:	00 00                	add    %al,(%rax)
 6b6:	00 00                	add    %al,(%rax)
 6b8:	07                   	(bad)  
 6b9:	00 00                	add    %al,(%rax)
 6bb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 6c1 <_init-0x93f>
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Дизассемблирование раздела .plt:

0000000000001020 <.plt>:
    1020:	ff 35 82 2f 00 00    	pushq  0x2f82(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 83 2f 00 00 	bnd jmpq *0x2f83(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop

Дизассемблирование раздела .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 7d 2f 00 00 	bnd jmpq *0x2f7d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Дизассемблирование раздела .plt.sec:

0000000000001080 <putchar@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 2d 2f 00 00 	bnd jmpq *0x2f2d(%rip)        # 3fb8 <putchar@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <puts@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 25 2f 00 00 	bnd jmpq *0x2f25(%rip)        # 3fc0 <puts@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <__stack_chk_fail@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 1d 2f 00 00 	bnd jmpq *0x2f1d(%rip)        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <printf@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 15 2f 00 00 	bnd jmpq *0x2f15(%rip)        # 3fd0 <printf@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Дизассемблирование раздела .text:

00000000000010c0 <_start>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	31 ed                	xor    %ebp,%ebp
    10c6:	49 89 d1             	mov    %rdx,%r9
    10c9:	5e                   	pop    %rsi
    10ca:	48 89 e2             	mov    %rsp,%rdx
    10cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10d1:	50                   	push   %rax
    10d2:	54                   	push   %rsp
    10d3:	4c 8d 05 d6 02 00 00 	lea    0x2d6(%rip),%r8        # 13b0 <__libc_csu_fini>
    10da:	48 8d 0d 5f 02 00 00 	lea    0x25f(%rip),%rcx        # 1340 <__libc_csu_init>
    10e1:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 11a9 <main>
    10e8:	ff 15 f2 2e 00 00    	callq  *0x2ef2(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ee:	f4                   	hlt    
    10ef:	90                   	nop

00000000000010f0 <deregister_tm_clones>:
    10f0:	48 8d 3d 19 2f 00 00 	lea    0x2f19(%rip),%rdi        # 4010 <__TMC_END__>
    10f7:	48 8d 05 12 2f 00 00 	lea    0x2f12(%rip),%rax        # 4010 <__TMC_END__>
    10fe:	48 39 f8             	cmp    %rdi,%rax
    1101:	74 15                	je     1118 <deregister_tm_clones+0x28>
    1103:	48 8b 05 ce 2e 00 00 	mov    0x2ece(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    110a:	48 85 c0             	test   %rax,%rax
    110d:	74 09                	je     1118 <deregister_tm_clones+0x28>
    110f:	ff e0                	jmpq   *%rax
    1111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <register_tm_clones>:
    1120:	48 8d 3d e9 2e 00 00 	lea    0x2ee9(%rip),%rdi        # 4010 <__TMC_END__>
    1127:	48 8d 35 e2 2e 00 00 	lea    0x2ee2(%rip),%rsi        # 4010 <__TMC_END__>
    112e:	48 29 fe             	sub    %rdi,%rsi
    1131:	48 89 f0             	mov    %rsi,%rax
    1134:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1138:	48 c1 f8 03          	sar    $0x3,%rax
    113c:	48 01 c6             	add    %rax,%rsi
    113f:	48 d1 fe             	sar    %rsi
    1142:	74 14                	je     1158 <register_tm_clones+0x38>
    1144:	48 8b 05 a5 2e 00 00 	mov    0x2ea5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    114b:	48 85 c0             	test   %rax,%rax
    114e:	74 08                	je     1158 <register_tm_clones+0x38>
    1150:	ff e0                	jmpq   *%rax
    1152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <__do_global_dtors_aux>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	80 3d a5 2e 00 00 00 	cmpb   $0x0,0x2ea5(%rip)        # 4010 <__TMC_END__>
    116b:	75 2b                	jne    1198 <__do_global_dtors_aux+0x38>
    116d:	55                   	push   %rbp
    116e:	48 83 3d 82 2e 00 00 	cmpq   $0x0,0x2e82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1175:	00 
    1176:	48 89 e5             	mov    %rsp,%rbp
    1179:	74 0c                	je     1187 <__do_global_dtors_aux+0x27>
    117b:	48 8b 3d 86 2e 00 00 	mov    0x2e86(%rip),%rdi        # 4008 <__dso_handle>
    1182:	e8 e9 fe ff ff       	callq  1070 <__cxa_finalize@plt>
    1187:	e8 64 ff ff ff       	callq  10f0 <deregister_tm_clones>
    118c:	c6 05 7d 2e 00 00 01 	movb   $0x1,0x2e7d(%rip)        # 4010 <__TMC_END__>
    1193:	5d                   	pop    %rbp
    1194:	c3                   	retq   
    1195:	0f 1f 00             	nopl   (%rax)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <frame_dummy>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	e9 77 ff ff ff       	jmpq   1120 <register_tm_clones>

00000000000011a9 <main>:
    11a9:	f3 0f 1e fa          	endbr64 
    11ad:	55                   	push   %rbp
    11ae:	48 89 e5             	mov    %rsp,%rbp
    11b1:	48 83 ec 70          	sub    $0x70,%rsp
    11b5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11bc:	00 00 
    11be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11c2:	31 c0                	xor    %eax,%eax
    11c4:	c7 45 a8 ff 00 00 00 	movl   $0xff,-0x58(%rbp)
    11cb:	c7 45 d0 00 ff 00 00 	movl   $0xff00,-0x30(%rbp)
    11d2:	c7 45 d4 28 ff 00 00 	movl   $0xff28,-0x2c(%rbp)
    11d9:	c7 45 d8 2b ff 00 00 	movl   $0xff2b,-0x28(%rbp)
    11e0:	c7 45 dc ff ff 00 00 	movl   $0xffff,-0x24(%rbp)
    11e7:	c7 45 e0 fc ff 00 00 	movl   $0xfffc,-0x20(%rbp)
    11ee:	c7 45 e4 ff c0 00 00 	movl   $0xc0ff,-0x1c(%rbp)
    11f5:	c7 45 e8 9f c0 00 00 	movl   $0xc09f,-0x18(%rbp)
    11fc:	c7 45 ec 91 c0 00 00 	movl   $0xc091,-0x14(%rbp)
    1203:	c7 45 f0 f1 c0 00 00 	movl   $0xc0f1,-0x10(%rbp)
    120a:	c7 45 f4 31 c0 00 00 	movl   $0xc031,-0xc(%rbp)
    1211:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    1218:	eb 28                	jmp    1242 <main+0x99>
    121a:	8b 45 98             	mov    -0x68(%rbp),%eax
    121d:	48 98                	cltq   
    121f:	8b 44 85 d0          	mov    -0x30(%rbp,%rax,4),%eax
    1223:	33 45 a8             	xor    -0x58(%rbp),%eax
    1226:	89 45 ac             	mov    %eax,-0x54(%rbp)
    1229:	8b 45 98             	mov    -0x68(%rbp),%eax
    122c:	89 c2                	mov    %eax,%edx
    122e:	c1 ea 1f             	shr    $0x1f,%edx
    1231:	01 d0                	add    %edx,%eax
    1233:	d1 f8                	sar    %eax
    1235:	48 98                	cltq   
    1237:	8b 55 ac             	mov    -0x54(%rbp),%edx
    123a:	89 54 85 b0          	mov    %edx,-0x50(%rbp,%rax,4)
    123e:	83 45 98 02          	addl   $0x2,-0x68(%rbp)
    1242:	83 7d 98 09          	cmpl   $0x9,-0x68(%rbp)
    1246:	7e d2                	jle    121a <main+0x71>
    1248:	48 8d 3d b9 0d 00 00 	lea    0xdb9(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    124f:	e8 3c fe ff ff       	callq  1090 <puts@plt>
    1254:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    125b:	eb 20                	jmp    127d <main+0xd4>
    125d:	8b 45 9c             	mov    -0x64(%rbp),%eax
    1260:	48 98                	cltq   
    1262:	8b 44 85 d0          	mov    -0x30(%rbp,%rax,4),%eax
    1266:	89 c6                	mov    %eax,%esi
    1268:	48 8d 3d c2 0d 00 00 	lea    0xdc2(%rip),%rdi        # 2031 <_IO_stdin_used+0x31>
    126f:	b8 00 00 00 00       	mov    $0x0,%eax
    1274:	e8 37 fe ff ff       	callq  10b0 <printf@plt>
    1279:	83 45 9c 01          	addl   $0x1,-0x64(%rbp)
    127d:	83 7d 9c 09          	cmpl   $0x9,-0x64(%rbp)
    1281:	7e da                	jle    125d <main+0xb4>
    1283:	bf 0a 00 00 00       	mov    $0xa,%edi
    1288:	e8 f3 fd ff ff       	callq  1080 <putchar@plt>
    128d:	48 8d 3d a4 0d 00 00 	lea    0xda4(%rip),%rdi        # 2038 <_IO_stdin_used+0x38>
    1294:	e8 f7 fd ff ff       	callq  1090 <puts@plt>
    1299:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    12a0:	eb 24                	jmp    12c6 <main+0x11d>
    12a2:	8b 45 a0             	mov    -0x60(%rbp),%eax
    12a5:	48 98                	cltq   
    12a7:	8b 44 85 d0          	mov    -0x30(%rbp,%rax,4),%eax
    12ab:	89 c6                	mov    %eax,%esi
    12ad:	48 8d 3d 7d 0d 00 00 	lea    0xd7d(%rip),%rdi        # 2031 <_IO_stdin_used+0x31>
    12b4:	b8 00 00 00 00       	mov    $0x0,%eax
    12b9:	e8 f2 fd ff ff       	callq  10b0 <printf@plt>
    12be:	83 45 a0 01          	addl   $0x1,-0x60(%rbp)
    12c2:	83 45 a0 01          	addl   $0x1,-0x60(%rbp)
    12c6:	83 7d a0 09          	cmpl   $0x9,-0x60(%rbp)
    12ca:	7e d6                	jle    12a2 <main+0xf9>
    12cc:	bf 0a 00 00 00       	mov    $0xa,%edi
    12d1:	e8 aa fd ff ff       	callq  1080 <putchar@plt>
    12d6:	48 8d 3d 8b 0d 00 00 	lea    0xd8b(%rip),%rdi        # 2068 <_IO_stdin_used+0x68>
    12dd:	e8 ae fd ff ff       	callq  1090 <puts@plt>
    12e2:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
    12e9:	eb 20                	jmp    130b <main+0x162>
    12eb:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    12ee:	48 98                	cltq   
    12f0:	8b 44 85 b0          	mov    -0x50(%rbp,%rax,4),%eax
    12f4:	89 c6                	mov    %eax,%esi
    12f6:	48 8d 3d 34 0d 00 00 	lea    0xd34(%rip),%rdi        # 2031 <_IO_stdin_used+0x31>
    12fd:	b8 00 00 00 00       	mov    $0x0,%eax
    1302:	e8 a9 fd ff ff       	callq  10b0 <printf@plt>
    1307:	83 45 a4 01          	addl   $0x1,-0x5c(%rbp)
    130b:	83 7d a4 04          	cmpl   $0x4,-0x5c(%rbp)
    130f:	7e da                	jle    12eb <main+0x142>
    1311:	bf 0a 00 00 00       	mov    $0xa,%edi
    1316:	e8 65 fd ff ff       	callq  1080 <putchar@plt>
    131b:	b8 00 00 00 00       	mov    $0x0,%eax
    1320:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1324:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    132b:	00 00 
    132d:	74 05                	je     1334 <main+0x18b>
    132f:	e8 6c fd ff ff       	callq  10a0 <__stack_chk_fail@plt>
    1334:	c9                   	leaveq 
    1335:	c3                   	retq   
    1336:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    133d:	00 00 00 

0000000000001340 <__libc_csu_init>:
    1340:	f3 0f 1e fa          	endbr64 
    1344:	41 57                	push   %r15
    1346:	4c 8d 3d 53 2a 00 00 	lea    0x2a53(%rip),%r15        # 3da0 <__frame_dummy_init_array_entry>
    134d:	41 56                	push   %r14
    134f:	49 89 d6             	mov    %rdx,%r14
    1352:	41 55                	push   %r13
    1354:	49 89 f5             	mov    %rsi,%r13
    1357:	41 54                	push   %r12
    1359:	41 89 fc             	mov    %edi,%r12d
    135c:	55                   	push   %rbp
    135d:	48 8d 2d 44 2a 00 00 	lea    0x2a44(%rip),%rbp        # 3da8 <__do_global_dtors_aux_fini_array_entry>
    1364:	53                   	push   %rbx
    1365:	4c 29 fd             	sub    %r15,%rbp
    1368:	48 83 ec 08          	sub    $0x8,%rsp
    136c:	e8 8f fc ff ff       	callq  1000 <_init>
    1371:	48 c1 fd 03          	sar    $0x3,%rbp
    1375:	74 1f                	je     1396 <__libc_csu_init+0x56>
    1377:	31 db                	xor    %ebx,%ebx
    1379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1380:	4c 89 f2             	mov    %r14,%rdx
    1383:	4c 89 ee             	mov    %r13,%rsi
    1386:	44 89 e7             	mov    %r12d,%edi
    1389:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    138d:	48 83 c3 01          	add    $0x1,%rbx
    1391:	48 39 dd             	cmp    %rbx,%rbp
    1394:	75 ea                	jne    1380 <__libc_csu_init+0x40>
    1396:	48 83 c4 08          	add    $0x8,%rsp
    139a:	5b                   	pop    %rbx
    139b:	5d                   	pop    %rbp
    139c:	41 5c                	pop    %r12
    139e:	41 5d                	pop    %r13
    13a0:	41 5e                	pop    %r14
    13a2:	41 5f                	pop    %r15
    13a4:	c3                   	retq   
    13a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    13ac:	00 00 00 00 

00000000000013b0 <__libc_csu_fini>:
    13b0:	f3 0f 1e fa          	endbr64 
    13b4:	c3                   	retq   

Дизассемблирование раздела .fini:

00000000000013b8 <_fini>:
    13b8:	f3 0f 1e fa          	endbr64 
    13bc:	48 83 ec 08          	sub    $0x8,%rsp
    13c0:	48 83 c4 08          	add    $0x8,%rsp
    13c4:	c3                   	retq   

Дизассемблирование раздела .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	d0 92 d0 b5 d1 81    	rclb   -0x7e2e4a30(%rdx)
    200e:	d1 8c 20 d0 bd d0 b0 	rorl   -0x4f2f4230(%rax,%riz,1)
    2015:	d1 87 d0 b0 d0 bb    	roll   -0x442f4f30(%rdi)
    201b:	d1 8c d0 bd d1 8b d0 	rorl   -0x2f742e43(%rax,%rdx,8)
    2022:	b9 20 d0 bc d0       	mov    $0xd0bcd020,%ecx
    2027:	b0 d1                	mov    $0xd1,%al
    2029:	81 d1 81 d0 b8 d0    	adc    $0xd0b8d081,%ecx
    202f:	b2 00                	mov    $0x0,%dl
    2031:	25 64 20 00 00       	and    $0x2064,%eax
    2036:	00 00                	add    %al,(%rax)
    2038:	d0 a7 d0 b5 d1 82    	shlb   -0x7d2e4a30(%rdi)
    203e:	d0 bd d1 8b d0 b5    	sarb   -0x4a2f742f(%rbp)
    2044:	20 d1                	and    %dl,%cl
    2046:	8d                   	(bad)  
    2047:	d0 bb d0 b5 d0 bc    	sarb   -0x432f4a30(%rbx)
    204d:	d0 b5 d0 bd d1 82    	shlb   -0x7d2e4230(%rbp)
    2053:	d1 8b 20 d0 bc d0    	rorl   -0x2f432fe0(%rbx)
    2059:	b0 d1                	mov    $0xd1,%al
    205b:	81 d1 81 d0 b8 d0    	adc    $0xd0b8d081,%ecx
    2061:	b2 d0                	mov    $0xd0,%dl
    2063:	b0 00                	mov    $0x0,%al
    2065:	00 00                	add    %al,(%rax)
    2067:	00 d0                	add    %dl,%al
    2069:	98                   	cwtl   
    206a:	d0 bd d0 b2 d0 b5    	sarb   -0x4a2f4d30(%rbp)
    2070:	d1 80 d1 82 d0 b8    	roll   -0x472f7d2f(%rax)
    2076:	d1 80 d0 be d0 b2    	roll   -0x4d2f4130(%rax)
    207c:	d0 b0 d0 bd d0 bd    	shlb   -0x422f4230(%rax)
    2082:	d1 8b d0 b9 20 d0    	rorl   -0x2fdf4630(%rbx)
    2088:	bc d0 b0 d1 81       	mov    $0x81d1b0d0,%esp
    208d:	d1 81 d0 b8 d0 b2    	roll   -0x4d2f4730(%rcx)
	...

Дизассемблирование раздела .eh_frame_hdr:

0000000000002094 <__GNU_EH_FRAME_HDR>:
    2094:	01 1b                	add    %ebx,(%rbx)
    2096:	03 3b                	add    (%rbx),%edi
    2098:	40 00 00             	add    %al,(%rax)
    209b:	00 07                	add    %al,(%rdi)
    209d:	00 00                	add    %al,(%rax)
    209f:	00 8c ef ff ff 74 00 	add    %cl,0x74ffff(%rdi,%rbp,8)
    20a6:	00 00                	add    %al,(%rax)
    20a8:	dc ef                	fsubr  %st,%st(7)
    20aa:	ff                   	(bad)  
    20ab:	ff 9c 00 00 00 ec ef 	lcall  *-0x10140000(%rax,%rax,1)
    20b2:	ff                   	(bad)  
    20b3:	ff b4 00 00 00 2c f0 	pushq  -0xfd40000(%rax,%rax,1)
    20ba:	ff                   	(bad)  
    20bb:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
    20bf:	00 15 f1 ff ff cc    	add    %dl,-0x3300000f(%rip)        # ffffffffcd0020b6 <_end+0xffffffffccffe09e>
    20c5:	00 00                	add    %al,(%rax)
    20c7:	00 ac f2 ff ff ec 00 	add    %ch,0xecffff(%rdx,%rsi,8)
    20ce:	00 00                	add    %al,(%rax)
    20d0:	1c f3                	sbb    $0xf3,%al
    20d2:	ff                   	(bad)  
    20d3:	ff 34 01             	pushq  (%rcx,%rax,1)
	...

Дизассемблирование раздела .eh_frame:

00000000000020d8 <__FRAME_END__-0x104>:
    20d8:	14 00                	adc    $0x0,%al
    20da:	00 00                	add    %al,(%rax)
    20dc:	00 00                	add    %al,(%rax)
    20de:	00 00                	add    %al,(%rax)
    20e0:	01 7a 52             	add    %edi,0x52(%rdx)
    20e3:	00 01                	add    %al,(%rcx)
    20e5:	78 10                	js     20f7 <__GNU_EH_FRAME_HDR+0x63>
    20e7:	01 1b                	add    %ebx,(%rbx)
    20e9:	0c 07                	or     $0x7,%al
    20eb:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    20f1:	00 00                	add    %al,(%rax)
    20f3:	00 1c 00             	add    %bl,(%rax,%rax,1)
    20f6:	00 00                	add    %al,(%rax)
    20f8:	c8 ef ff ff          	enterq $0xffef,$0xff
    20fc:	2f                   	(bad)  
    20fd:	00 00                	add    %al,(%rax)
    20ff:	00 00                	add    %al,(%rax)
    2101:	44 07                	rex.R (bad) 
    2103:	10 00                	adc    %al,(%rax)
    2105:	00 00                	add    %al,(%rax)
    2107:	00 24 00             	add    %ah,(%rax,%rax,1)
    210a:	00 00                	add    %al,(%rax)
    210c:	34 00                	xor    $0x0,%al
    210e:	00 00                	add    %al,(%rax)
    2110:	10 ef                	adc    %ch,%bh
    2112:	ff                   	(bad)  
    2113:	ff 50 00             	callq  *0x0(%rax)
    2116:	00 00                	add    %al,(%rax)
    2118:	00 0e                	add    %cl,(%rsi)
    211a:	10 46 0e             	adc    %al,0xe(%rsi)
    211d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2120:	0b 77 08             	or     0x8(%rdi),%esi
    2123:	80 00 3f             	addb   $0x3f,(%rax)
    2126:	1a 3a                	sbb    (%rdx),%bh
    2128:	2a 33                	sub    (%rbx),%dh
    212a:	24 22                	and    $0x22,%al
    212c:	00 00                	add    %al,(%rax)
    212e:	00 00                	add    %al,(%rax)
    2130:	14 00                	adc    $0x0,%al
    2132:	00 00                	add    %al,(%rax)
    2134:	5c                   	pop    %rsp
    2135:	00 00                	add    %al,(%rax)
    2137:	00 38                	add    %bh,(%rax)
    2139:	ef                   	out    %eax,(%dx)
    213a:	ff                   	(bad)  
    213b:	ff 10                	callq  *(%rax)
	...
    2145:	00 00                	add    %al,(%rax)
    2147:	00 14 00             	add    %dl,(%rax,%rax,1)
    214a:	00 00                	add    %al,(%rax)
    214c:	74 00                	je     214e <__GNU_EH_FRAME_HDR+0xba>
    214e:	00 00                	add    %al,(%rax)
    2150:	30 ef                	xor    %ch,%bh
    2152:	ff                   	(bad)  
    2153:	ff 40 00             	incl   0x0(%rax)
	...
    215e:	00 00                	add    %al,(%rax)
    2160:	1c 00                	sbb    $0x0,%al
    2162:	00 00                	add    %al,(%rax)
    2164:	8c 00                	mov    %es,(%rax)
    2166:	00 00                	add    %al,(%rax)
    2168:	41                   	rex.B
    2169:	f0 ff                	lock (bad) 
    216b:	ff 8d 01 00 00 00    	decl   0x1(%rbp)
    2171:	45 0e                	rex.RB (bad) 
    2173:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2179:	03 84 01 0c 07 08 00 	add    0x8070c(%rcx,%rax,1),%eax
    2180:	44 00 00             	add    %r8b,(%rax)
    2183:	00 ac 00 00 00 b8 f1 	add    %ch,-0xe480000(%rax,%rax,1)
    218a:	ff                   	(bad)  
    218b:	ff 65 00             	jmpq   *0x0(%rbp)
    218e:	00 00                	add    %al,(%rax)
    2190:	00 46 0e             	add    %al,0xe(%rsi)
    2193:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2199:	8e 03                	mov    (%rbx),%es
    219b:	45 0e                	rex.RB (bad) 
    219d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    21a3:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86302fed <_end+0xffffffff862fefd5>
    21a9:	06                   	(bad)  
    21aa:	48 0e                	rex.W (bad) 
    21ac:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    21b2:	6e                   	outsb  %ds:(%rsi),(%dx)
    21b3:	0e                   	(bad)  
    21b4:	38 41 0e             	cmp    %al,0xe(%rcx)
    21b7:	30 41 0e             	xor    %al,0xe(%rcx)
    21ba:	28 42 0e             	sub    %al,0xe(%rdx)
    21bd:	20 42 0e             	and    %al,0xe(%rdx)
    21c0:	18 42 0e             	sbb    %al,0xe(%rdx)
    21c3:	10 42 0e             	adc    %al,0xe(%rdx)
    21c6:	08 00                	or     %al,(%rax)
    21c8:	10 00                	adc    %al,(%rax)
    21ca:	00 00                	add    %al,(%rax)
    21cc:	f4                   	hlt    
    21cd:	00 00                	add    %al,(%rax)
    21cf:	00 e0                	add    %ah,%al
    21d1:	f1                   	icebp  
    21d2:	ff                   	(bad)  
    21d3:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 21d9 <__GNU_EH_FRAME_HDR+0x145>
    21d9:	00 00                	add    %al,(%rax)
	...

00000000000021dc <__FRAME_END__>:
    21dc:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .init_array:

0000000000003da0 <__frame_dummy_init_array_entry>:
    3da0:	a0                   	.byte 0xa0
    3da1:	11 00                	adc    %eax,(%rax)
    3da3:	00 00                	add    %al,(%rax)
    3da5:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .fini_array:

0000000000003da8 <__do_global_dtors_aux_fini_array_entry>:
    3da8:	60                   	(bad)  
    3da9:	11 00                	adc    %eax,(%rax)
    3dab:	00 00                	add    %al,(%rax)
    3dad:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .dynamic:

0000000000003db0 <_DYNAMIC>:
    3db0:	01 00                	add    %eax,(%rax)
    3db2:	00 00                	add    %al,(%rax)
    3db4:	00 00                	add    %al,(%rax)
    3db6:	00 00                	add    %al,(%rax)
    3db8:	01 00                	add    %eax,(%rax)
    3dba:	00 00                	add    %al,(%rax)
    3dbc:	00 00                	add    %al,(%rax)
    3dbe:	00 00                	add    %al,(%rax)
    3dc0:	0c 00                	or     $0x0,%al
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
    3dc6:	00 00                	add    %al,(%rax)
    3dc8:	00 10                	add    %dl,(%rax)
    3dca:	00 00                	add    %al,(%rax)
    3dcc:	00 00                	add    %al,(%rax)
    3dce:	00 00                	add    %al,(%rax)
    3dd0:	0d 00 00 00 00       	or     $0x0,%eax
    3dd5:	00 00                	add    %al,(%rax)
    3dd7:	00 b8 13 00 00 00    	add    %bh,0x13(%rax)
    3ddd:	00 00                	add    %al,(%rax)
    3ddf:	00 19                	add    %bl,(%rcx)
    3de1:	00 00                	add    %al,(%rax)
    3de3:	00 00                	add    %al,(%rax)
    3de5:	00 00                	add    %al,(%rax)
    3de7:	00 a0 3d 00 00 00    	add    %ah,0x3d(%rax)
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 1b                	add    %bl,(%rbx)
    3df1:	00 00                	add    %al,(%rax)
    3df3:	00 00                	add    %al,(%rax)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 08                	add    %cl,(%rax)
    3df9:	00 00                	add    %al,(%rax)
    3dfb:	00 00                	add    %al,(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 1a                	add    %bl,(%rdx)
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 a8 3d 00 00 00    	add    %ch,0x3d(%rax)
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	08 00                	or     %al,(%rax)
    3e1a:	00 00                	add    %al,(%rax)
    3e1c:	00 00                	add    %al,(%rax)
    3e1e:	00 00                	add    %al,(%rax)
    3e20:	f5                   	cmc    
    3e21:	fe                   	(bad)  
    3e22:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e25:	00 00                	add    %al,(%rax)
    3e27:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e35 <_DYNAMIC+0x85>
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 b8 04 00 00 00    	add    %bh,0x4(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 06                	add    %al,(%rsi)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 c8                	add    %cl,%al
    3e49:	03 00                	add    (%rax),%eax
    3e4b:	00 00                	add    %al,(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 0a                	add    %cl,(%rdx)
    3e51:	00 00                	add    %al,(%rax)
    3e53:	00 00                	add    %al,(%rax)
    3e55:	00 00                	add    %al,(%rax)
    3e57:	00 ac 00 00 00 00 00 	add    %ch,0x0(%rax,%rax,1)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	0b 00                	or     (%rax),%eax
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	18 00                	sbb    %al,(%rax)
    3e6a:	00 00                	add    %al,(%rax)
    3e6c:	00 00                	add    %al,(%rax)
    3e6e:	00 00                	add    %al,(%rax)
    3e70:	15 00 00 00 00       	adc    $0x0,%eax
	...
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 03                	add    %al,(%rbx)
    3e81:	00 00                	add    %al,(%rax)
    3e83:	00 00                	add    %al,(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 a0 3f 00 00 00    	add    %ah,0x3f(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 02                	add    %al,(%rdx)
    3e91:	00 00                	add    %al,(%rax)
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 60 00             	add    %ah,0x0(%rax)
    3e9a:	00 00                	add    %al,(%rax)
    3e9c:	00 00                	add    %al,(%rax)
    3e9e:	00 00                	add    %al,(%rax)
    3ea0:	14 00                	adc    $0x0,%al
    3ea2:	00 00                	add    %al,(%rax)
    3ea4:	00 00                	add    %al,(%rax)
    3ea6:	00 00                	add    %al,(%rax)
    3ea8:	07                   	(bad)  
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 17                	add    %dl,(%rdi)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 68 06             	add    %ch,0x6(%rax)
    3eba:	00 00                	add    %al,(%rax)
    3ebc:	00 00                	add    %al,(%rax)
    3ebe:	00 00                	add    %al,(%rax)
    3ec0:	07                   	(bad)  
    3ec1:	00 00                	add    %al,(%rax)
    3ec3:	00 00                	add    %al,(%rax)
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 a8 05 00 00 00    	add    %ch,0x5(%rax)
    3ecd:	00 00                	add    %al,(%rax)
    3ecf:	00 08                	add    %cl,(%rax)
    3ed1:	00 00                	add    %al,(%rax)
    3ed3:	00 00                	add    %al,(%rax)
    3ed5:	00 00                	add    %al,(%rax)
    3ed7:	00 c0                	add    %al,%al
    3ed9:	00 00                	add    %al,(%rax)
    3edb:	00 00                	add    %al,(%rax)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 09                	add    %cl,(%rcx)
    3ee1:	00 00                	add    %al,(%rax)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 18                	add    %bl,(%rax)
    3ee9:	00 00                	add    %al,(%rax)
    3eeb:	00 00                	add    %al,(%rax)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 1e                	add    %bl,(%rsi)
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 08                	add    %cl,(%rax)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 fb                	add    %bh,%bl
    3f01:	ff                   	(bad)  
    3f02:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 01                	add    %al,(%rcx)
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	08 00                	or     %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 fe                	add    %bh,%dh
    3f11:	ff                   	(bad)  
    3f12:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 78 05             	add    %bh,0x5(%rax)
    3f1a:	00 00                	add    %al,(%rax)
    3f1c:	00 00                	add    %al,(%rax)
    3f1e:	00 00                	add    %al,(%rax)
    3f20:	ff                   	(bad)  
    3f21:	ff                   	(bad)  
    3f22:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 01                	add    %al,(%rcx)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	00 00                	add    %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 f0                	add    %dh,%al
    3f31:	ff                   	(bad)  
    3f32:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 64 05 00          	add    %ah,0x0(%rbp,%rax,1)
    3f3b:	00 00                	add    %al,(%rax)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 f9                	add    %bh,%cl
    3f41:	ff                   	(bad)  
    3f42:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 03                	add    %al,(%rbx)
	...

Дизассемблирование раздела .got:

0000000000003fa0 <_GLOBAL_OFFSET_TABLE_>:
    3fa0:	b0 3d                	mov    $0x3d,%al
	...
    3fb6:	00 00                	add    %al,(%rax)
    3fb8:	30 10                	xor    %dl,(%rax)
    3fba:	00 00                	add    %al,(%rax)
    3fbc:	00 00                	add    %al,(%rax)
    3fbe:	00 00                	add    %al,(%rax)
    3fc0:	40 10 00             	adc    %al,(%rax)
    3fc3:	00 00                	add    %al,(%rax)
    3fc5:	00 00                	add    %al,(%rax)
    3fc7:	00 50 10             	add    %dl,0x10(%rax)
    3fca:	00 00                	add    %al,(%rax)
    3fcc:	00 00                	add    %al,(%rax)
    3fce:	00 00                	add    %al,(%rax)
    3fd0:	60                   	(bad)  
    3fd1:	10 00                	adc    %al,(%rax)
	...

Дизассемблирование раздела .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .bss:

0000000000004010 <completed.8060>:
	...

Дизассемблирование раздела .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 31 37 75 62    	xor    %ch,0x62753731(%rip)        # 62753748 <_end+0x6274f730>
  17:	75 6e                	jne    87 <_init-0xf79>
  19:	74 75                	je     90 <_init-0xf70>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	30 2e                	xor    %ch,(%rsi)
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 39                	and    %bh,(%rcx)
  25:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  28:	30 00                	xor    %al,(%rax)
